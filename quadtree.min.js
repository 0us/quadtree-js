/* âŠž @timohausmann/quadtree-js v1.2.0 https://github.com/timohausmann/quadtree-js.git */
!function(a){function b(a,b,c,d){this.max_objects=b||10,this.max_levels=c||4,this.level=d||0,this.bounds=a,this.objects=[],this.nodes=[]}b.prototype.split=function(){var c=this.level+1,d=a.round(this.bounds.width/2),e=a.round(this.bounds.height/2),f=a.round(this.bounds.x),g=a.round(this.bounds.y);this.nodes[0]=new b({x:f+d,y:g,width:d,height:e},this.max_objects,this.max_levels,c),this.nodes[1]=new b({x:f,y:g,width:d,height:e},this.max_objects,this.max_levels,c),this.nodes[2]=new b({x:f,y:g+e,width:d,height:e},this.max_objects,this.max_levels,c),this.nodes[3]=new b({x:f+d,y:g+e,width:d,height:e},this.max_objects,this.max_levels,c)},b.prototype.getIndex=function(a){var b=[],c=this.bounds.x+this.bounds.width/2,d=this.bounds.y+this.bounds.height/2;return a.x<c&&a.y<d&&b.push(1),(a.x>c&&a.y<d||a.x+a.width>c&&a.y<d)&&b.push(0),(a.x<c&&a.y>d||a.x<c&&a.y+a.height>d)&&b.push(2),(a.x>c&&a.y>d||a.x+a.width>c&&a.y>d||a.x+a.width>c&&a.y+a.height>d)&&b.push(3),b},b.prototype.insert=function(a){var b,c=0;if(this.nodes.length)for(b=this.getIndex(a),c=0;c<b.length;c++)this.nodes[b[c]].insert(a);else if(this.objects.push(a),this.objects.length>this.max_objects&&this.level<this.max_levels){for(this.nodes.length||this.split(),c=0;c<this.objects.length;c++){b=this.getIndex(this.objects[c]);for(var d=0;d<b.length;d++)this.nodes[b[d]].insert(this.objects[c])}this.objects=[]}},b.prototype.retrieve=function(a){var b=this.getIndex(a),c=this.objects;if(this.nodes.length)for(var d=0;d<b.length;d++)c=c.concat(this.nodes[b[d]].retrieve(a));return c=c.filter(function(a,b){return c.indexOf(a)>=b})},b.prototype.clear=function(){this.objects=[];for(var a=0;a<this.nodes.length;a+=1)this.nodes.length&&this.nodes[a].clear();this.nodes=[]},"undefined"!=typeof module&&void 0!==module.exports?module.exports=b:window.Quadtree=b}(Math);